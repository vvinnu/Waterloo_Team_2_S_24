{"version":3,"file":"static/js/583.4be59625.chunk.js","mappings":"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","sources":["View/Loginreg/Registration.js","View/Notification/customisenoti.js","../node_modules/@babel/runtime/helpers/esm/defineProperty.js","../node_modules/@babel/runtime/helpers/esm/objectSpread2.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport Notification from '../Notification/customisenoti';\r\nimport SimpleReactValidator from 'simple-react-validator';\r\n// import './reg.css';\r\n// import './log.css';\r\nfunction Registration() {\r\n    const navigate = useNavigate();\r\n    const validator = new SimpleReactValidator();\r\n    const [reg,setreg]=useState({});\r\n    const [error,seterror]=useState({});\r\n    let err={}\r\n    const changeData=(event)=>{\r\n        //console.log(event.target.name);\r\n        //console.log(event.target.value);\r\n     setreg({    \r\n           ...reg,\r\n           \r\n            [event.target.name]:event.target.value,\r\n        });\r\n       \r\n    }\r\n //   const [regData, setnewregData] = useState([]);\r\n    \r\n    const submitData=(e)=>{\r\n        e.preventDefault();\r\n    if (validator.allValid()) {\r\n      \r\n        const requestOptions = {\r\n            method: 'POST',\r\n            body: JSON.stringify(reg),\r\n            headers: { \"Content-Type\": \"application/json\" }\r\n        };\r\n        fetch('http://localhost:3001/reg', requestOptions)\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                console.log(data.id);\r\n                if (data.status == 'Success') {\r\n                    Notification({ message: data.message, position: 'right', type: 'success' });\r\n                    navigate('/Login');\r\n                  }\r\n                  else {\r\n                    Notification({ message: data.message, position: 'right', type: 'error' });\r\n                  }\r\n        });\r\n    \r\n        // if(!reg.email)\r\n        // {\r\n        //     err.email= \"Please Enter Email\";\r\n        // }\r\n        // else{\r\n        //     err.email= \"\";\r\n        // }\r\n        // if(!reg.password)\r\n        // {\r\n        //     err.password=\"Please Enter Password\";\r\n        // }\r\n        // else if(!(reg.password>=8))\r\n        // {\r\n        //     err.password=\"Password is less then 8\";\r\n        // }\r\n        // else{\r\n        //     err.password= \"\";\r\n        // }\r\n        // if(!reg.rpassword)\r\n        // {\r\n        //     err.rpassword=\"Please Enter Password\";\r\n        // }\r\n        // else if(!(reg.rpassword==reg.password))\r\n        // {\r\n        //     err.rpassword=\"Password and repassword are not same\";\r\n        // }\r\n        // else{\r\n        //     err.rpassword= \"\";\r\n        // }\r\n        // if(!reg.mobile)\r\n        // {\r\n        //     err.mobile=\"Please Enter mobile\";\r\n        // }\r\n        // else if(!(reg.mobile.length==10))\r\n        // {\r\n        //     err.mobile=\"Please Enter 10 digits\";\r\n        // }\r\n        // else{\r\n        //     err.mobile= \"\";\r\n        // }\r\n        // if(!reg.fname)\r\n        // {\r\n        //     err.fname= \"Please Enter First name\";\r\n        // }\r\n        // else{\r\n        //     err.fname= \"\";\r\n        // }\r\n        // if(!reg.lname)\r\n        // {\r\n        //     err.lname= \"Please Enter Last name\";\r\n        // }\r\n        // else{\r\n        //     err.lname= \"\";\r\n        // }\r\n\r\n        // if(!(reg.radiogroup1.value==1)||(reg.radiogroup1.value==0))\r\n        // {\r\n        //     err.radiogroup1= \"Please Enter Last name\";\r\n        // }\r\n        // else{\r\n        //     err.radiogroup1= \"\";\r\n        // }\r\n        // if(!(reg.country.value==1)||(reg.country.value==2)||(reg.radiogroup1.value==3))\r\n        // {\r\n        //     err.country= \"Please Enter Last name\";\r\n        // }\r\n        // else{\r\n        //     err.country= \"\";\r\n        // }\r\n        //seterror(err);\r\n    } \r\n    else{\r\n        Notification({ message: \"Please fill data\", position: 'right', type: 'error' });\r\n      } \r\n    } \r\n    return <>\r\n    <div className=\"space\">\r\n        <div className=\"form_wrapper\">\r\n            <div className=\"form_container\">\r\n                <div className=\"title_container\">\r\n                    <h2>Registration Form</h2>\r\n                </div>\r\n                <div className=\"row clearfix\">\r\n                    <div className=\"\">\r\n                        <form onSubmit={submitData}>\r\n                            <div className=\"input_field\"> <span><i aria-hidden=\"true\" className=\"fa fa-envelope\"> </i></span>\r\n                                <input type=\"email\" name=\"email\" placeholder=\"Email\"  onChange={changeData} />\r\n                            </div> <span style={{color:'red'}}>{validator.showMessageFor('email')}{validator.message('email', reg.email, 'required|email')}</span>\r\n                             \r\n                            <div className=\"input_field\"> <span><i aria-hidden=\"true\" className=\"fa fa-lock\"></i></span>\r\n                                <input type=\"password\" name=\"password\" placeholder=\"Password\" onChange={changeData}/>\r\n                            </div> <span style={{color:'red'}}>{validator.showMessageFor('password')}{validator.message('password', reg.password, 'required|min:4')}</span>\r\n                            <div className=\"input_field\"> <span><i aria-hidden=\"true\" className=\"fa fa-lock\"></i></span>\r\n                                <input type=\"password\" name=\"rpassword\" placeholder=\"Re-type Password\" onChange={changeData} />\r\n                            </div><span style={{color:'red'}}>{validator.showMessageFor('rpassword')}{validator.message('rpassword', reg.rpassword, 'required|min:4')}</span>                   \r\n                            <div className=\"input_field\"> <span><i aria-hidden=\"true\" className=\"fa fa-phone\"> </i></span>\r\n                                <input type=\"tel\" name=\"mobile\" placeholder=\"Mobile-no\"   onChange={changeData}/>\r\n                            </div> <span style={{color:'red'}}>{validator.showMessageFor('mobile')}{validator.message('mobile', reg.mobile, 'required|size:10')}</span>   \r\n                            <div className=\"row clearfix\">\r\n                                <div className=\"col_half\">\r\n                                    <div className=\"input_field\"> <span><i aria-hidden=\"true\" className=\"fa fa-user\"></i></span>\r\n                                        <input type=\"text\" name=\"fname\" placeholder=\"First Name\" onChange={changeData}/>\r\n                                    </div><span style={{color:'red'}}>{validator.showMessageFor('fname')}{validator.message('fname', reg.fname, 'required|alpha')}</span>   \r\n                                </div>\r\n                                <div className=\"col_half\">\r\n                                    <div className=\"input_field\"> <span><i aria-hidden=\"true\" className=\"fa fa-user\"></i></span>\r\n                                        <input type=\"text\" name=\"lname\" placeholder=\"Last Name\"  onChange={changeData}/>\r\n                                    </div><span style={{color:'red'}}>{validator.showMessageFor('lname')}{validator.message('lname', reg.lname, 'required|alpha')}</span>   \r\n                                </div>\r\n                            </div>                           \r\n                                <br/>\r\n                                <input className=\"button\" type=\"submit\" value=\"Register\" onSubmit={submitData}/>\r\n                            \r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        </div>\r\n    </>;\r\n}\r\n\r\nexport default Registration","import React from 'react';\r\nimport { toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\ntoast.configure();\r\nconst Notification = (obj = {message: 'yes', position: 'center', type: 'success'\r\n}) => {\r\n    if (obj.message == undefined) {\r\n        obj['message'] = \"ok yes\";\r\n    }\r\n    let newob = {\r\n        position: toast.POSITION.BOTTOM_LEFT\r\n    };\r\n    if(obj.position=='center'){\r\n        newob['position']=toast.POSITION.BOTTOM_CENTER;\r\n     }\r\n     if(obj.position=='right'){\r\n        newob['position']=toast.POSITION.BOTTOM_RIGHT;\r\n     }\r\n     if(obj.type=='success'){\r\n        return toast.success(obj.message,newob);\r\n     }\r\n     else if (obj.type=='error') {\r\n        return toast.error(obj.message,newob);\r\n     }\r\n     else if (obj.type=='info') {\r\n        return toast.info(obj.message,newob);\r\n     }\r\n\r\n}\r\n\r\nexport default Notification;","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","import defineProperty from \"./defineProperty.js\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    enumerableOnly && (symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    })), keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = null != arguments[i] ? arguments[i] : {};\n    i % 2 ? ownKeys(Object(source), !0).forEach(function (key) {\n      defineProperty(target, key, source[key]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) {\n      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n    });\n  }\n\n  return target;\n}"],"names":["navigate","useNavigate","validator","SimpleReactValidator","useState","reg","setreg","changeData","event","target","name","value","submitData","e","preventDefault","allValid","requestOptions","method","body","JSON","stringify","headers","fetch","then","response","json","data","console","log","id","status","Notification","message","position","type","className","onSubmit","placeholder","onChange","style","color","showMessageFor","email","password","rpassword","mobile","fname","lname","toast","obj","undefined","newob","_defineProperty","key","Object","defineProperty","enumerable","configurable","writable","ownKeys","object","enumerableOnly","keys","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","push","apply","_objectSpread2","i","arguments","length","source","forEach","getOwnPropertyDescriptors","defineProperties"],"sourceRoot":""}