{"version":3,"file":"static/js/7.e22ad4d3.chunk.js","mappings":"wLAyEA,UApEA,WACI,IAAMA,GAASC,EAAAA,EAAAA,MAEf,GAAuBC,EAAAA,EAAAA,UAAS,IAAhC,eAAOC,EAAP,KAAaC,EAAb,KACMC,EAAY,IAAIC,KAgCtB,OA/BAC,aAAaC,WAAW,QA+BjB,+BACF,gBAAKC,UAAU,QAAf,UACD,gBAAKA,UAAU,eAAf,UACI,iBAAKA,UAAU,iBAAf,WACI,gBAAKA,UAAU,kBAAkBC,MAAO,CAACC,aAAa,QAAQC,SAAS,QAAvE,UACI,+CAEJ,gBAAKH,UAAU,eAAf,UACI,gBAAKA,UAAU,GAAf,UACI,6BACA,gBAAKA,UAAU,eAAf,UACQ,0BACI,iBAAKA,UAAU,cAAf,eAA8B,2BAAM,cAAG,cAAY,OAAOA,UAAU,sBAChE,kBAAOI,KAAK,OAAOC,KAAK,QAAQC,YAAY,QAAQC,SAAU,SAACC,GAAKb,EAASa,EAAEC,OAAOC,kBAKlG,iBAAKV,UAAU,eAAf,WACA,gBAAKA,UAAU,WAAf,UACA,kBAAOA,UAAU,SAASI,KAAK,SAASM,MAAM,OAAOC,MAAM,OAAOC,QA/C5E,WACV,GAAIhB,EAAUiB,WAAY,CAC1B,IAAIC,EAAS,IAAIC,SACjBD,EAASE,OAAO,QAAQtB,GAKxBuB,MAAM,gCAJK,CACPC,OAAO,OACPC,KAAKL,IAGRM,MAAK,SAAAC,GAAG,OAAEA,EAAIC,UACdF,MAAK,SAAAG,GACFC,QAAQC,IAAIF,GACI,WAAbA,EAAKG,QAEJ5B,aAAa6B,QAAQ,MAAMJ,EAAKK,MAChCC,EAAAA,EAAAA,GAAa,CAAEC,QAASP,EAAKO,QAASC,SAAU,QAAS3B,KAAM,YAC/Db,EAAS,UAGTsC,EAAAA,EAAAA,GAAa,CAAEC,QAASP,EAAKO,QAASC,SAAU,QAAS3B,KAAM,kBAKvEyB,EAAAA,EAAAA,GAAa,CAAEC,QAAS,mBAAoBC,SAAU,QAAS3B,KAAM,WAuBmCH,MAAO,CAAC+B,MAAM,cAClG,iBAAKhC,UAAU,WAAf,eAA2B,kBAAOA,UAAU,SAASI,KAAK,SAASQ,QAnDtE,WACjBrB,EAAS,WAkDqGmB,MAAM,SAAST,MAAO,CAAC+B,MAAM,mC,+CC1DnJC,EAAAA,GAAAA,YA2BA,IA1BqB,WACd,IADeC,EAChB,uDADsB,CAACJ,QAAS,MAAOC,SAAU,SAAU3B,KAAM,gBAEhD+B,GAAfD,EAAIJ,UACJI,EAAG,QAAc,UAErB,IAAIE,EAAQ,CACRL,SAAUE,EAAAA,GAAAA,SAAAA,aAQb,MANgB,UAAdC,EAAIH,WACHK,EAAK,SAAaH,EAAAA,GAAAA,SAAAA,eAEJ,SAAdC,EAAIH,WACJK,EAAK,SAAaH,EAAAA,GAAAA,SAAAA,cAER,WAAVC,EAAI9B,KACG6B,EAAAA,GAAAA,QAAcC,EAAIJ,QAAQM,GAEjB,SAAVF,EAAI9B,KACH6B,EAAAA,GAAAA,MAAYC,EAAIJ,QAAQM,GAEf,QAAVF,EAAI9B,KACH6B,EAAAA,GAAAA,KAAWC,EAAIJ,QAAQM,QAD5B","sources":["View/Loginreg/Forgot.js","View/Notification/customisenoti.js"],"sourcesContent":["import React ,{useState} from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport Notification from '../Notification/customisenoti';\r\nimport SimpleReactValidator from 'simple-react-validator';\r\n\r\nfunction Forgot() {\r\n    const navigate=useNavigate();\r\n\r\n    const [email,setEmail]=useState('');\r\n    const validator = new SimpleReactValidator();\r\n    localStorage.removeItem('otp');\r\n    const backfromhere = ()=>{\r\n        navigate('/Login');\r\n    }\r\n    const sendotp=()=>{\r\n        if (validator.allValid()) {\r\n        let formdata=new FormData();\r\n        formdata.append('email',email);\r\n        let option={\r\n            method:'POST',\r\n            body:formdata,\r\n        }\r\n        fetch('http://localhost:5050/sendotp',option)\r\n        .then(res=>res.json())\r\n        .then(data=>{\r\n            console.log(data);\r\n            if(data.status=='success')\r\n            {\r\n                localStorage.setItem('otp',data.otp);\r\n                Notification({ message: data.message, position: 'right', type: 'success' });\r\n                navigate('/Otp');\r\n            }   \r\n            else{\r\n                Notification({ message: data.message, position: 'right', type: 'error' });\r\n            }\r\n        });\r\n    }\r\n    else{\r\n        Notification({ message: \"Please fill data\", position: 'right', type: 'error' });\r\n      }\r\n    }\r\n    return <>\r\n         <div className=\"space\">\r\n        <div className=\"form_wrapper\">\r\n            <div className=\"form_container\">\r\n                <div className=\"title_container\" style={{marginBottom:'-72px',fontSize:'20px'}}>\r\n                    <h1>Forgot Password</h1>\r\n                </div>\r\n                <div className=\"row clearfix\">\r\n                    <div className=\"\">\r\n                        <form>\r\n                        <div className=\"row clearfix\">\r\n                                <div>\r\n                                    <div className=\"input_field\"> <span><i aria-hidden=\"true\" className=\"fa fa-envelope\"></i></span>\r\n                                        <input type=\"text\" name=\"email\" placeholder=\"Email\" onChange={(e)=>{setEmail(e.target.value)}}/>\r\n                                    </div>\r\n                                    {/* <span style={{color:'red'}}>{validator.showMessageFor('email')}{validator.message('email', email.email, 'required|email')}</span> */}\r\n                                </div>\r\n                            </div> \r\n                            <div className=\"row clearfix\">\r\n                            <div className=\"col_half\">\r\n                            <input className=\"button\" type=\"button\" value=\"Send\" width=\"10px\" onClick={sendotp} style={{color:'black'}}  /></div>\r\n                            <div className=\"col_half\"> <input className=\"button\" type=\"submit\" onClick={backfromhere} value=\"Cancel\" style={{color:'black'}}  /></div>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        </div>\r\n    </>;\r\n}\r\n\r\nexport default Forgot","import React from 'react';\r\nimport { toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\ntoast.configure();\r\nconst Notification = (obj = {message: 'yes', position: 'center', type: 'success'\r\n}) => {\r\n    if (obj.message == undefined) {\r\n        obj['message'] = \"ok yes\";\r\n    }\r\n    let newob = {\r\n        position: toast.POSITION.BOTTOM_LEFT\r\n    };\r\n    if(obj.position=='center'){\r\n        newob['position']=toast.POSITION.BOTTOM_CENTER;\r\n     }\r\n     if(obj.position=='right'){\r\n        newob['position']=toast.POSITION.BOTTOM_RIGHT;\r\n     }\r\n     if(obj.type=='success'){\r\n        return toast.success(obj.message,newob);\r\n     }\r\n     else if (obj.type=='error') {\r\n        return toast.error(obj.message,newob);\r\n     }\r\n     else if (obj.type=='info') {\r\n        return toast.info(obj.message,newob);\r\n     }\r\n\r\n}\r\n\r\nexport default Notification;"],"names":["navigate","useNavigate","useState","email","setEmail","validator","SimpleReactValidator","localStorage","removeItem","className","style","marginBottom","fontSize","type","name","placeholder","onChange","e","target","value","width","onClick","allValid","formdata","FormData","append","fetch","method","body","then","res","json","data","console","log","status","setItem","otp","Notification","message","position","color","toast","obj","undefined","newob"],"sourceRoot":""}